@model Models.EF.BRAND

<button class="btn btn-sm btn-primary" value="Back"
        onclick="return BackToBrand()">
    <i class="mdi mdi-arrow-left-bold"></i>
    Back to Brand
</button>
<hr />


<form action="#" method="post" id="create-product-form">
    <div class="row">
        <div class="input-field col-lg-2 s12">
            <label>Brand</label>
        </div>
        <div class="input-field col s12">
            <input type="text" readonly value="@Model.BrandName">
        </div>
    </div>

    <div class="row">
        <div class="input-field col-lg-2 s12">
            <label>Name</label>
        </div>
        <div class="input-field col s12">
            <input id="product-name" name="product-name" type="text" class="validate">
        </div>
    </div>

    <div class="row">
        <div class="input-field col-lg-2 s12">
            <label>URL</label>
        </div>
        <div class="input-field col s12">
            <input id="product-url" type="text" class="validate" readonly value="(name)">
        </div>
    </div>

    <div class="row">
        <div class="input-field col-lg-2 s12">
            <label>Price</label>
        </div>
        <div class="input-field col s12">
            <input id="product-price" name="product-price" type="number" class="validate">
        </div>
    </div>

    <div class="row">
        <div class="input-field col-lg-2 s12">
            <label>Promotion Price</label>
        </div>
        <div class="input-field col s12">
            <input id="product-promotion" name="product-promotion" type="number" class="validate">
        </div>
    </div>

    <div class="row">
        <div class="input-field col-lg-2 s12">
            <label>Stock</label>
        </div>
        <div class="input-field col s12">
            <input id="product-stock" name="product-stock" type="number" class="validate">
        </div>
    </div>

    <div class="row">
        <div class="input-field col-lg-2 s12">
            <label>Product Image</label>
        </div>
        <div class="input-field col s12">
            <input id="product-image" type="text" class="validate">
        </div>
    </div>

    <div class="row">
        <div class="input-field col-lg-2 s12">
            <label>Status</label>
        </div>
        <div class="input-field col s12">
            <input id="status-checkbox" type="checkbox" checked="checked" />
            <label for="status-checkbox" id="checkbox-label">Active</label>
        </div>
    </div>

    <div class="row">
        <div class="input-field col-lg-2 s12">
            <label>Decription</label>
        </div>
        <div class="input-field col s12">
            <textarea placeholder="Decription" id="text-area" name="area"></textarea>
        </div>
    </div>

    <h5 class="text-danger info-text"></h5>

    <button class="btn waves-effect waves-light" type="submit" name="action">
        <span>Submit </span><i class="mdi mdi-send"></i>
    </button>
    <hr />


</form>


<div id="123jqk"></div>

<button class="btn btn-sm btn-primary" value="" id="create-configuation" disabled>
    Create Configuration
</button>
<hr />

<script src="~/Areas/Admin/assets/js/sweetalert.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script>

    $(document).ready(function () {
        
        let getid = 0;
            $('select').material_select();

            $("#status-checkbox").click(function () {
                if ($(this).is(":checked")) {
                    $("#checkbox-label").text("Active");
                } else {
                    $("#checkbox-label").text("Inactive");
                };
            });


            $("#product-name").on('input', function (e) {
                $("#product-url").val(slugify($("#product-name").val()));
            });

            function slugify(text) {
                return text.toString().toLowerCase()
                    .replace(/\s+/g, '-')           // Replace spaces with -
                    .replace(/[^\w\-]+/g, '')       // Remove all non-word chars
                    .replace(/\-\-+/g, '-')         // Replace multiple - with single -
                    .replace(/^-+/, '')             // Trim - from start of text
                    .replace(/-+$/, '');            // Trim - from end of text
            }


            $("#create-product-form").validate({
                rules: {
                    'product-name': "required",
                    'product-price': {
                        required: true
                    },
                    'product-stock': {
                        digits: true
                    }
                },
                messages: {
                    'product-name': "Please enter product name",
                    'product-price': {
                        required: "Please enter product price"
                    },
                    'product-stock': "Not a correct format"
                },
                submitHandler: function () {
                    let data = {
                        "ProductName": $("#product-name").val(),
                        "ProductPrice": $("#product-price").val(),
                        "PromotionPrice": $("#product-promotion").val(),
                        "ProductStock": $("#product-stock").val(),
                        "BrandID": "@Model.BrandID",
                        "Size": $("#select-size-multi").val(),
                        "ProductImage": $("#product-image").val(),
                        "ProductDescription": $("#text-area").val(),
                        "ProductStatus": $("#status-checkbox").is(":checked")
                    };
                    $.ajax({
                        url: "@Url.Action("CreateProduct", "Product")",
                        type: "POST",
                        data: JSON.stringify(data),
                        dataType: "json",
                        contentType: "application/json",
                        success: function (response) {
                            if (response.Success) {
                                //console.log(response);
                                check = true;
                                swal("Created !", "", "success");
                                $("#finish").attr("disabled", false);
                                $.get("@Url.Action("CreateConfigurationPartial", "Configuration")", {
                                    "id": response.id
                                }, function (data) {
                                    //console.log(data);
                                    $("#123jqk").empty();
                                    $("#123jqk").append(data);
                                });

                                //$("#create-config").attr("disabled",false);
                                //window.location.href = "@Url.Action("ProductList", "Product")";

                                $("#product-id-config").val(`${response.id}`);


                            }
                            else
                                swal("Create fail !", "", "error");
                        },
                        error: function (error) {
                            swal("Error occurred!", "", "error");
                        }
                    });
                }



            });


        $("#create-configuation").click(function () {

            });
        });
</script>